@inherits LayoutComponentBase
@inject NavigationManager NavigationManager
@inject Blazored.LocalStorage.ILocalStorageService LocalStorage

<PageTitle>EaaReuse Marketplace</PageTitle>

<header style="background-color: mediumslateblue" class="p-3 text-bg-dark">
    <div class="container">
        <div class="d-flex flex-wrap align-items-center justify-content-center justify-content-lg-start">
            <ul class="nav col-12 col-lg-auto me-lg-auto mb-2 justify-content-center mb-md-0">
                <!-- Update starts here -->
                <li>
                    <a href="/" class="btn btn-outline-light me-2">
                        <i class="bi bi-house-door-fill fs-3"></i>
                        EaaReuse Marketplace
                    </a>
                </li>
            </ul>
            <form class="col-12 col-lg-auto mb-3 mb-lg-0 me-lg-3" role="search">
                <input type="search" class="form-control form-control-dark text-bg-dark" placeholder="Search..." aria-label="Search">
            </form>
            @if (isLoggedIn)
            {
                <a href="/myprofile" class="btn btn-warning">My Profile</a>
                <button @onclick="Logout" type="button" class="btn btn-outline-light me-2">Logout</button>
            }
            else
            {
                <a href="/login/" class="btn btn-outline-light me-2">Login</a>
                <a href="/register/" class="btn btn-warning">Sign-up</a>
            }
        </div>
    </div>
</header>

<main>
    <div>
        <article class="content px-4">
            @Body
        </article>
    </div>
</main>

@code {
    private bool isLoggedIn = false;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            isLoggedIn = await LocalStorage.GetItemAsync<bool>("isLoggedIn");
            StateHasChanged(); // Ensure the component re-renders after setting isLoggedIn
        }
    }

    private async Task Logout()
    {
        await LocalStorage.RemoveItemAsync("isLoggedIn");
        NavigationManager.NavigateTo("/login", true);
    }
}
