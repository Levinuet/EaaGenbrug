@page "/myprofile"
@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager
@inject HttpClient Http;
@using Core.Model;

<h1>My Profile</h1>

@if (isLoggedIn)
{
    <p>Welcome to your profile page!</p>
    <p>Username: @username</p>
    <p>Your Purchases: @purchases</p>
    <button class="btn btn-primary" @onclick="CreateAd">Create Ad</button>
}
else
{
    <p>You are not logged in. Please <a href="/login">click here to log in</a>.</p>
}

<h1 class="mb-3 mt-3">Mine annoncer</h1>
<table class="table table-striped">
    <thead>
        <tr>
            <th>Title</th>
            <th>Price</th>
            <th>Location</th>
            <th>Category</th>
            <th>Image</th>

            <th>Status</th>

        </tr>
    </thead>
    <tbody>
        @foreach (var item in shoppingList ?? new Ad[0])
        {
            <tr>
                <td>@item.Title</td>
                <td>@item.Price</td>
                <td>@item.Location</td>
                <td>@item.Category</td>
                <td><img src="@item.ImageUrl" alt="Item Image" style="height:50px;" /></td>
                <td>@item.Status</td>
            </tr>
        }

    </tbody>
</table>

<img src="busy.gif" style="display:@busyDisplayStyle" />

@code {
    private bool isLoggedIn = false;
    private string username = "Default User";
    private string ads = "No ads listed.";
    private string purchases = "No purchases made.";
    

    protected override async Task OnInitializedAsync()
    {
        var isLoggedInStr = await JSRuntime.InvokeAsync<string>("localStorage.getItem", "isLoggedIn");
        isLoggedIn = isLoggedInStr != null && isLoggedInStr.Equals("true", StringComparison.OrdinalIgnoreCase);

        if (isLoggedIn)
        {
            username = await JSRuntime.InvokeAsync<string>("localStorage.getItem", "username") ?? "Default User";
            ads = await JSRuntime.InvokeAsync<string>("localStorage.getItem", "ads") ?? "No ads listed.";
            purchases = await JSRuntime.InvokeAsync<string>("localStorage.getItem", "purchases") ?? "No purchases made.";
        }

        {
            busyDisplayStyle = "block"; // tænd busy
            shoppingList = await Http.GetFromJsonAsync<Ad[]>($"{serverUrl}/api/shopping/getall");
            busyDisplayStyle = "none"; // sluk busy
        }
    }

    private void CreateAd()
    {
        NavigationManager.NavigateTo("/create");
    }

    // container for listen
    private Ad[]? shoppingList = new Ad[0];

    // adresse på server
    private string serverUrl = "https://localhost:7189";


    // Objekt for formen der vises modal
    private Ad _adItem = new Ad();

    private string busyDisplayStyle = "none";
    }
