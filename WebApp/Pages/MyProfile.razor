@page "/myprofile"
@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager
@inject HttpClient Http;
@using Core.Model;

<h1>Min side</h1>

@if (isLoggedIn)
{
<div class="welcome-message">
    <p>Velkommen til din side, @username! Her kan du se dine aktive annoncer og dine tidligere køb samt svare på købsanmodninger.</p>
    <button class="btn btn-primary" @onclick="CreateAd">Opret annonce</button>
    <button class="btn btn-primary" @onclick="Purchasedads">Se tidligere køb</button>
</div>

<div class="ads-section">
    <h2>Mine Annoncer</h2>
        @foreach (var ad in activeAds)
        {
            <div class="card">
            <div class="card-body">
            <h5 class="card-title">@ad.Title</h5>
            <img class="card-img" src="@ad.ImageUrl" alt="Item Image" style="height: 100px;">
            <p class="card-text">Price: @ad.Price.ToString("C")</p>
            <p class="card-text">Location: @ad.Location</p>
            <p class="card-text">Category: @ad.Category</p>
            <p class="@(ad.Status == "Reserved" ? "card-status-r" : "")">@ad.Status</p>
        @if (ad.Status == "Reserved")
        {
        <button class="btn btn-success sold-btn" @onclick="() => ApprovePurchase(ad)">Mark as Sold</button>
        }
            </div>
            </div>
        }
</div>

    <div class="sold-products">
        <h2>Solgte produkter</h2>
        @foreach (var ad in soldAds)
        {
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">@ad.Title</h5>
                    <img class="card-img" src="@ad.ImageUrl" alt="Item Image" style="height: 100px;">
                    <p class="card-text">Price: @ad.Price.ToString("C")</p>
                    <p class="card-text">Location: @ad.Location</p>
                    <p class="card-text">Category: @ad.Category</p>
                    <p class="card-status-s">@ad.Status</p>
                </div>
            </div>
        }
    </div>
}
else
{
<p>Du er ikke logget ind <a href="/login">Klik her for at logge ind</a>.</p>
}
<img src="busy.gif" style="display:@busyDisplayStyle" />

@code {
private bool isLoggedIn = false;
private string username = "Default User";
private string ads = "No ads listed.";
private string purchases = "No purchases made.";


protected override async Task OnInitializedAsync()
{
var isLoggedInStr = await JSRuntime.InvokeAsync<string>("localStorage.getItem", "isLoggedIn");
isLoggedIn = isLoggedInStr != null && isLoggedInStr.Equals("true", StringComparison.OrdinalIgnoreCase);

if (isLoggedIn)
{
username = await JSRuntime.InvokeAsync<string>("localStorage.getItem", "username") ?? "Default User";





// Show busy indicator
busyDisplayStyle = "block";

// Fetch all ads
var allAds = await Http.GetFromJsonAsync<Ad[]>($"{serverUrl}/api/eaagenbrug/getall");

// Split ads into active and reserved
activeAds = allAds?.Where(ad => ad.SellerUserName == username && ad.Status != "Sold").ToArray() ?? new Ad[0];
soldAds = allAds?.Where(ad => ad.SellerUserName == username && ad.Status == "Sold").ToArray() ?? new Ad[0];

// Hide busy indicator
busyDisplayStyle = "none";
}
else
{
activeAds = new Ad[0];
soldAds = new Ad[0];
}
}

private void CreateAd()
{
NavigationManager.NavigateTo("/create");
}

private void Purchasedads()
{
NavigationManager.NavigateTo("/purchasedads");
}


private async Task ApprovePurchase(Ad ad)
{
    ad.BuyerUserName = isLoggedIn ? username : "Guest"; // Set BuyerUserName based on login status

    var response = await Http.PostAsJsonAsync<Ad>($"{serverUrl}/api/eaagenbrug/approve", ad);
    
    var allAds = await Http.GetFromJsonAsync<Ad[]>($"{serverUrl}/api/eaagenbrug/getall");
    activeAds = allAds?.Where(ad => ad.SellerUserName == username && ad.Status != "Sold").ToArray() ?? new Ad[0];
    soldAds = allAds?.Where(ad => ad.SellerUserName == username && ad.Status == "Sold").ToArray() ?? new Ad[0];
}
// adresse på server
private string serverUrl = "https://localhost:7189";


private Ad[]? activeAds = new Ad[0];
private Ad[]? soldAds = new Ad[0];


private string busyDisplayStyle = "none";
}