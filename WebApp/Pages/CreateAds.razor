@page "/create"
@using Core.Model;
@inject Blazored.LocalStorage.ILocalStorageService LocalStorage
@inject HttpClient Http;

<!-- Form for creating a new advertisement -->
<EditForm EditContext="@aEditContext" class="row p-3" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <!-- Input field for title -->
    <div class="col-md-12 mb-3">
        <label for="Title">Title</label>
        <InputText id="Title" @bind-Value="_Ad.Title" class="form-control" />
    </div>

    <!-- Input field for price -->
    <div class="col-md-6 mb-3">
        <label for="Price">Price</label>
        <InputNumber id="Price" @bind-Value="_Ad.Price" class="form-control" />
    </div>

    <!-- Select dropdown for location -->
    <div class="col-md-6 mb-3">
        <label for="Location">Location</label>
        <InputSelect @bind-Value="_Ad.Location" class="form-control" placeholder="Search...">
            <option value="Genbrug Sønderhøj 30">Genbrug Sønderhøj 30</option>
            <option value="Genbrug Sønderhøj 7G">Genbrug Sønderhøj 7G</option>
            <option value="Genbrug Guldbygning">Genbrug Guldbygning</option>
            <option value="At Seller">At Seller</option>
        </InputSelect>
    </div>

    <!-- Text area for description -->
    <div class="col-md-12 mb-3">
        <label for="Description">Description</label>
        <InputTextArea id="Description" @bind-Value="_Ad.Description" class="form-control" />
    </div>

    <!-- Select dropdown for category -->
    <div class="col-md-6 mb-3">
        <label for="Category">Category</label>
        <InputSelect @bind-Value="_Ad.Category" class="form-control">
            <option value="Electronics">Electronics</option>
            <option value="Books">Books</option>
            <option value="Clothes">Clothes</option>
        </InputSelect>
    </div>

    <!-- Input field for image URL -->
    <div class="col-md-6 mb-3">
        <label for="ImageUrl">Image URL</label>
        <InputText id="ImageUrl" @bind-Value="_Ad.ImageUrl" class="form-control" />
    </div>

    <!-- Select dropdown for status -->
    <div class="col-md-12 mb-3">
        <label for="Status">Status</label>
        <InputSelect @bind-Value="_Ad.Status" class="form-control">
            <option value="Active">Active</option>
            <option value="Reserved">Reserved</option>
        </InputSelect>
    </div>

    <!-- Submit button -->
    <div class="col-12 mb-3">
        <button type="submit" class="btn btn-primary">Add</button>
    </div>
</EditForm>

@code {
    private bool isLoggedIn = false;
    private string username = "Default User";
    private Ad _Ad = new Ad();
    private EditContext? aEditContext;
    private string serverUrl = "https://localhost:7189";
    private Ad[]? shoppingList = new Ad[0];

    // Initialize form context and check user login status
    protected override void OnInitialized()
    {
        aEditContext = new EditContext(_Ad);
    }

    // Asynchronous initialization to retrieve user authentication status
    protected override async Task OnInitializedAsync()
    {
        try
        {
            isLoggedIn = await LocalStorage.GetItemAsync<bool>("isLoggedIn");
            if (isLoggedIn)
            {
                username = await LocalStorage.GetItemAsync<string>("username") ?? "Default User";
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine("Error during initialization: " + ex.Message);
        }
    }

    // Handle submission of the form with valid data
    public async Task HandleValidSubmit()
    {
        await AddShoppingItem();
    }

    // Add a new shopping item
    private async Task AddShoppingItem()
    {
        _Ad.SellerUserName = username;
        await Http.PostAsJsonAsync<Ad>($"{serverUrl}/api/eaagenbrug/add", _Ad);
        shoppingList = await Http.GetFromJsonAsync<Ad[]>($"{serverUrl}/api/eaagenbrug/getall");
        _Ad = new Ad();  // Reset the Ad object to clear the form
    }
}